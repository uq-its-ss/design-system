name: Publish

on:
  push:
    branches:
      - master
      - releases

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ ! startsWith(github.event.head_commit.message, 'chore(release):Publish') }}
    steps:
      - name: "‚¨áÔ∏è Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.UQDS_PERSONAL_ACCESS_TOKEN }}

      - name: "üü¢ Install NodeJS"
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: "üì¶Ô∏è Install dependencies"
        run: npm install

      - name: "üìÇ Bootstrap Lerna"
        run: npx lerna bootstrap --no-ci

      - name: "üîê Authenticate to NPM"
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "üßê Version dry run"
        if: ${{ github.ref_name == 'releases' }}
        env:
          GH_TOKEN: ${{ secrets.UQDS_PERSONAL_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"          
          npx lerna version --conventional-commits --conventional-graduate --yes --no-git-tag-version --no-push || true

      - uses: trstringer/manual-approval@v1
        name: "‚åõÔ∏è Wait for approval"
        if: ${{ github.ref_name == 'releases' }}
        with:
          secret: ${{ github.UQDS_PERSONAL_ACCESS_TOKEN }}
          approvers: uqds-admin
          minimum-approvals: 1
          issue-title: 'Approve new release ‚úÖ'
          issue-body: >
            Please approve or deny the release of a new release.
            [View the workflow output](https://github.com/uq-its-ss/design-system/actions/runs/${{ github.run_number }}) to confirm the version is as expected.

          exclude-workflow-initiator-as-approver: false

      - name: "‚ú® Publish stable"
        if: ${{ github.ref_name == 'releases' }}
        env:
          GH_TOKEN: ${{ secrets.UQDS_PERSONAL_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"
          npx lerna publish --conventional-commits --conventional-graduate --yes

      - name: "üê£ Publish alpha"
        if: ${{ github.ref_name == 'master' }}
        env:
          GH_TOKEN: ${{ secrets.UQDS_PERSONAL_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"
          npx lerna publish --conventional-commits --conventional-prerelease --yes
