name: Version Dry Run

# This workflow runs on pull requests targeting the main release branches
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
      - releases

jobs:
  dry-run:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # Required to post a comment on the PR

    steps:
      - name: "‚¨áÔ∏è Checkout repo"
        uses: actions/checkout@v4
        with:
          # Checkout the PR's head branch instead of the temporary merge commit
          ref: ${{ github.head_ref }}
          # Important to fetch all history for Lerna to determine the version
          fetch-depth: 0

      - name: "‚éî Setup node 20"
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: "üì¶Ô∏è Install dependencies"
        run: npm ci

      - name: "üßê Determine and capture version dry run output"
        id: lerna_dry_run # Give this step an ID to reference its output later
        run: |
          # Configure git user, as Lerna may need it
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"

          # Prepare the appropriate Lerna command based on the PR's target branch
          if [[ "${{ github.base_ref }}" == "releases" ]]; then
            echo "Running dry run for a STABLE release (targeting 'releases')."
            COMMAND="npx lerna version --conventional-commits --conventional-graduate --yes --no-git-tag-version --no-push --allow-branch Version-Dry-Run"
          else
            echo "Running dry run for an ALPHA release (targeting 'master')."
            COMMAND="npx lerna version --conventional-commits --conventional-prerelease --yes --no-git-tag-version --no-push --allow-branch Version-Dry-Run"
          fi

          # Execute the command, capturing output and exit code.
          # We use `|| LERNA_EXIT_CODE=$?` to prevent the script from exiting on a non-zero code immediately.
          VERSION_OUTPUT=$($COMMAND 2>&1) || LERNA_EXIT_CODE=$?

          # Lerna exits with 1 when no changes are found. Provide a friendlier message for this case.
          if [[ $LERNA_EXIT_CODE -eq 1 && "$VERSION_OUTPUT" == *"No changed packages to version"* ]]; then
            VERSION_OUTPUT="‚úÖ Lerna found no changes to version. This is expected if there are no new 'fix:', 'feat:', or 'BREAKING CHANGE:' commits."
          elif [[ $LERNA_EXIT_CODE -ne 0 ]]; then
            echo "Lerna failed with an unexpected error. Exit code: $LERNA_EXIT_CODE"
            echo "$VERSION_OUTPUT"
            # If there's a real error, we'll still post it to the PR for debugging
          fi

          # Use a heredoc to properly handle multi-line output for the next step
          {
            echo "output<<EOF"
            echo "$VERSION_OUTPUT"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: "üîç Find existing Lerna dry run comment"
        id: find_comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '### ü§ñ Lerna Version Dry Run ü§ñ'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "‚úçÔ∏è Create or update dry run results comment"
        uses: peter-evans/create-or-update-comment@v4
        with:
          # The token is automatically provided by GitHub Actions
          token: ${{ secrets.GITHUB_TOKEN }}
          # The issue number is the PR number in this context
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          edit-mode: replace
          # This body will be the content of our comment
          body: |
            ### ü§ñ Lerna Version Dry Run ü§ñ

            This is a preview of the version bump that will occur if this PR is merged into `${{ github.base_ref }}`.

            <details>
            <summary>Click to view Lerna output</summary>

            ```
            ${{ steps.lerna_dry_run.outputs.output }}
            ```

            </details>

            *This is an automated comment. The version will not be published until the PR is merged.*